apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-microservice
  labels:
    app: springboot-restapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springboot-restapp
  template:
    metadata:
      labels:
        app: springboot-restapp
    spec:
      # initContainers:
      #   - name: init-db
      #     image: busybox:1.31
      #     command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']
      containers:
        - name: springboot-restapp
          image: truyenminhtoan/spring-boot-h2-aws-xray:1.0.4
          ports:
            - containerPort: 9500
          imagePullPolicy: Always            
          env:  
            - name: AWS_XRAY_TRACING_NAME 
              value: "spring-boot-h2"                
            - name: AWS_XRAY_DAEMON_ADDRESS
              value: "xray-service.default:2000"    
            - name: AWS_XRAY_CONTEXT_MISSING 
              value: "LOG_ERROR"  # Log an error and continue, Ideally RUNTIME_ERROR â€“ Throw a runtime exception which is default option if not configured                                            
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9500
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health-status
              port: 9500
            initialDelaySeconds: 60
            periodSeconds: 10          